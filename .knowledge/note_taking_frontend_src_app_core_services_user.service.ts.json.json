{"is_source_file": true, "format": "TypeScript", "description": "This file defines the UserService class in an Angular application, responsible for managing user profile information and authentication actions such as fetching current user details and logging out.", "external_files": ["../models/user.model", "./environment.service", "@angular/core", "@angular/common/http", "rxjs", "rxjs/operators"], "external_methods": ["inject", "HttpClient.get", "HttpClient.post", "of", "tap", "catchError"], "published": ["UserService"], "classes": [{"name": "UserService", "description": "A service for managing user profile data and authentication actions in an Angular app."}], "methods": [{"name": "me", "description": "Fetches the current user profile, using cache unless forced to refresh."}, {"name": "logout", "description": "Logs out the current user, with a fallback to no operation if an error occurs."}], "calls": ["this.http.get<UserProfile>(...)", "this.http.post<void>(...)", "of(...)", "tap(...)", "catchError(...)"], "search-terms": ["UserService", "Angular user profile management", "authentication", "HTTP request", "service injection", "TypeScript dependency injection"], "state": 2, "file_id": 27, "knowledge_revision": 56, "git_revision": "", "ctags": [{"_type": "tag", "name": "UserService", "path": "/home/kavia/workspace/code-generation/secure-notes-organizer-22453-22462/note_taking_frontend/src/app/core/services/user.service.ts", "pattern": "/^export class UserService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/secure-notes-organizer-22453-22462/note_taking_frontend/src/app/core/services/user.service.ts", "pattern": "/^  private readonly http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "UserService", "scopeKind": "class"}], "hash": "a71bdf240f91b1b54f7f4ed4c1fab017", "format-version": 4, "code-base-name": "note_taking_frontend", "filename": "note_taking_frontend/src/app/core/services/user.service.ts", "fields": [{"name": "private readonly http = inject(HttpClient);", "scope": "UserService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"56": ""}]}