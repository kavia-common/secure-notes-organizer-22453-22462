{"is_source_file": true, "format": "TypeScript", "description": "This file defines the NotesService class in Angular, providing methods for managing notes via REST API, including listing, retrieving, creating, updating, deleting, and toggling pin status of notes.", "external_files": ["../models/note.model", "./environment.service", "@angular/core", "@angular/common/http", "rxjs", "rxjs/operators"], "external_methods": ["HttpClient.get", "HttpClient.post", "HttpClient.put", "HttpClient.delete", "HttpClient.patch", "inject", "HttpParams.set", "pipe", "catchError", "of"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "Service class for managing notes through REST API endpoints in an Angular frontend."}], "methods": [{"name": "list", "description": "Retrieves a list of notes, with optional filters for search query, category, and pin status."}, {"name": "get", "description": "Fetches a single note by its unique identifier."}, {"name": "create", "description": "Creates a new note using provided payload."}, {"name": "update", "description": "Updates an existing note identified by ID with new data."}, {"name": "remove", "description": "Deletes a note specified by ID."}, {"name": "togglePin", "description": "Pins or unpins a note based on the boolean parameter."}], "calls": ["this.http.get", "this.http.post", "this.http.put", "this.http.delete", "this.http.patch"], "search-terms": ["NotesService", "REST API notes management", "Angular service for notes", "Notes API endpoints", "note model"], "state": 2, "file_id": 25, "knowledge_revision": 52, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/secure-notes-organizer-22453-22462/note_taking_frontend/src/app/core/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "hp", "path": "/home/kavia/workspace/code-generation/secure-notes-organizer-22453-22462/note_taking_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    let hp = new HttpParams();$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/secure-notes-organizer-22453-22462/note_taking_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  private readonly http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}], "hash": "453a284ca882ff91f29233feb9bd7350", "format-version": 4, "code-base-name": "note_taking_frontend", "filename": "note_taking_frontend/src/app/core/services/notes.service.ts", "fields": [{"name": "let hp = new HttpParams();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private readonly http = inject(HttpClient);", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"52": ""}]}